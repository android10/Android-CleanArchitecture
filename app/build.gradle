buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'

frodo {
  enabled = true
}

android {
  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'            //Some libraries have issues with this.
    disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
    disable 'IconDensities'             //For testing purpose. This is safe to remove.
    disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
  }

  signingConfigs {
    debug {
      storeFile file('../buildsystem/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
  }
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def dataDependencies = rootProject.ext.dataDependencies
  def testDependencies = rootProject.ext.dataTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies

  apt presentationDependencies.daggerCompiler
  compile presentationDependencies.dagger
  compile dataDependencies.okHttp
  compile dataDependencies.gson
  compile presentationDependencies.butterKnife
  compile presentationDependencies.recyclerView
  compile presentationDependencies.rxJava
  compile presentationDependencies.rxAndroid
  compile dataDependencies.androidAnnotations
  provided presentationDependencies.javaxAnnotation

  androidTestCompile presentationTestDependencies.mockito
  androidTestCompile presentationTestDependencies.dexmaker
  androidTestCompile presentationTestDependencies.dexmakerMockito
  androidTestCompile presentationTestDependencies.espresso
  androidTestCompile presentationTestDependencies.testingSupportLib

  testCompile testDependencies.junit
  testCompile testDependencies.assertj
  testCompile testDependencies.mockito
  testCompile testDependencies.robolectric

  //Development
  compile developmentDependencies.leakCanary
}
